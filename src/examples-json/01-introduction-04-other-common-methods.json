{"type":"playground","base":"smart-contract","files":{"src":{"directory":{"main*ts":{"file":{"contents":"import {\n  Field,\n  Poseidon,\n  PrivateKey,\n  PublicKey,\n  Signature,\n  Provable,\n} from \"o1js\";\n\nconst x = Field(1);\nconst hash = Poseidon.hash([x]); // takes array of Fields, returns Field\nconst privKey = PrivateKey.random(); // create a private key\nconst pubKey = PublicKey.fromPrivateKey(privKey); // derive public key\nconst msg = [hash];\nconst sig = Signature.create(privKey, msg); // sign a message\nconst isVerified = sig.verify(pubKey, msg); // Bool(true)\nProvable.log(\"is signature verified:\", isVerified); // should be true\n"}}}}},"filesArray":["src/main.ts"],"highlightedItem":{"highlightedName":"main*ts","highlightedCode":"import {\n  Field,\n  Poseidon,\n  PrivateKey,\n  PublicKey,\n  Signature,\n  Provable,\n} from \"o1js\";\n\nconst x = Field(1);\nconst hash = Poseidon.hash([x]); // takes array of Fields, returns Field\nconst privKey = PrivateKey.random(); // create a private key\nconst pubKey = PublicKey.fromPrivateKey(privKey); // derive public key\nconst msg = [hash];\nconst sig = Signature.create(privKey, msg); // sign a message\nconst isVerified = sig.verify(pubKey, msg); // Bool(true)\nProvable.log(\"is signature verified:\", isVerified); // should be true\n"},"focusedFiles":{"main*ts":{"file":{"contents":"import {\n  Field,\n  Poseidon,\n  PrivateKey,\n  PublicKey,\n  Signature,\n  Provable,\n} from \"o1js\";\n\nconst x = Field(1);\nconst hash = Poseidon.hash([x]); // takes array of Fields, returns Field\nconst privKey = PrivateKey.random(); // create a private key\nconst pubKey = PublicKey.fromPrivateKey(privKey); // derive public key\nconst msg = [hash];\nconst sig = Signature.create(privKey, msg); // sign a message\nconst isVerified = sig.verify(pubKey, msg); // Bool(true)\nProvable.log(\"is signature verified:\", isVerified); // should be true\n"}}},"command":"npm run build && node build/src/main.js","initTerminal":true}