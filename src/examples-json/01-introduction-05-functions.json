{"type":"playground","base":"smart-contract","files":{"src":{"directory":{"main*ts":{"file":{"contents":"import { Field, Provable } from \"o1js\";\n\nlet x = new Field(1); // x = 1\n\nconst addOneAndDouble = (x: Field): Field => {\n  return x.add(1).mul(2);\n};\n\nconst y = addOneAndDouble(x);\nconst isEqual = y.equals(4);\nProvable.log(\"y is:\", y);\nProvable.log(\"y is equal to 4:\", isEqual);\n"}}}}},"filesArray":["src/main.ts"],"highlightedItem":{"highlightedName":"main*ts","highlightedCode":"import { Field, Provable } from \"o1js\";\n\nlet x = new Field(1); // x = 1\n\nconst addOneAndDouble = (x: Field): Field => {\n  return x.add(1).mul(2);\n};\n\nconst y = addOneAndDouble(x);\nconst isEqual = y.equals(4);\nProvable.log(\"y is:\", y);\nProvable.log(\"y is equal to 4:\", isEqual);\n"},"focusedFiles":{"main*ts":{"file":{"contents":"import { Field, Provable } from \"o1js\";\n\nlet x = new Field(1); // x = 1\n\nconst addOneAndDouble = (x: Field): Field => {\n  return x.add(1).mul(2);\n};\n\nconst y = addOneAndDouble(x);\nconst isEqual = y.equals(4);\nProvable.log(\"y is:\", y);\nProvable.log(\"y is equal to 4:\", isEqual);\n"}}}}