{"type":"playground","base":"smart-contract","files":{"src":{"directory":{"main*ts":{"file":{"contents":"import { SmartContract, PrivateKey, Mina, AccountUpdate, Provable } from \"o1js\";\n\nclass HelloWorld extends SmartContract {}\n\nconst useProof = false;\nconst Local = Mina.LocalBlockchain({ proofsEnabled: useProof });\nMina.setActiveInstance(Local);\nconst { privateKey: deployerKey, publicKey: deployerAccount } =\n  Local.testAccounts[0];\n\nconst zkAppPrivateKey = PrivateKey.random();\nconst zkAppAddress = zkAppPrivateKey.toPublicKey();\nconst zkAppInstance = new HelloWorld(zkAppAddress);\nconst deployTxn = await Mina.transaction(deployerAccount, () => {\n  AccountUpdate.fundNewAccount(deployerAccount);\n  zkAppInstance.deploy();\n});\nconst transaction = await deployTxn.sign([deployerKey, zkAppPrivateKey]).send();\nProvable.log(transaction);\n"}}}}},"filesArray":["src/main.ts"],"highlightedItem":{"highlightedName":"main*ts","highlightedCode":"import { SmartContract, PrivateKey, Mina, AccountUpdate, Provable } from \"o1js\";\n\nclass HelloWorld extends SmartContract {}\n\nconst useProof = false;\nconst Local = Mina.LocalBlockchain({ proofsEnabled: useProof });\nMina.setActiveInstance(Local);\nconst { privateKey: deployerKey, publicKey: deployerAccount } =\n  Local.testAccounts[0];\n\nconst zkAppPrivateKey = PrivateKey.random();\nconst zkAppAddress = zkAppPrivateKey.toPublicKey();\nconst zkAppInstance = new HelloWorld(zkAppAddress);\nconst deployTxn = await Mina.transaction(deployerAccount, () => {\n  AccountUpdate.fundNewAccount(deployerAccount);\n  zkAppInstance.deploy();\n});\nconst transaction = await deployTxn.sign([deployerKey, zkAppPrivateKey]).send();\nProvable.log(transaction);\n"},"focusedFiles":{"main*ts":{"file":{"contents":"import { SmartContract, PrivateKey, Mina, AccountUpdate, Provable } from \"o1js\";\n\nclass HelloWorld extends SmartContract {}\n\nconst useProof = false;\nconst Local = Mina.LocalBlockchain({ proofsEnabled: useProof });\nMina.setActiveInstance(Local);\nconst { privateKey: deployerKey, publicKey: deployerAccount } =\n  Local.testAccounts[0];\n\nconst zkAppPrivateKey = PrivateKey.random();\nconst zkAppAddress = zkAppPrivateKey.toPublicKey();\nconst zkAppInstance = new HelloWorld(zkAppAddress);\nconst deployTxn = await Mina.transaction(deployerAccount, () => {\n  AccountUpdate.fundNewAccount(deployerAccount);\n  zkAppInstance.deploy();\n});\nconst transaction = await deployTxn.sign([deployerKey, zkAppPrivateKey]).send();\nProvable.log(transaction);\n"}}},"command":"npm run build && node build/src/main.js","initTerminal":true}