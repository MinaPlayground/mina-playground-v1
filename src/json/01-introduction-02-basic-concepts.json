{"type":"playground","base":"smart-contract","tutorial":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nconst chCodeConfig = {\n  \"staticMediaQuery\": \"not screen, (max-width: 768px)\",\n  \"autoImport\": false,\n  \"showCopyButton\": true,\n  \"theme\": \"github-dark\",\n  \"skipLanguages\": [],\n  \"filepath\": undefined\n};\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components), {CH} = _components;\n  if (!CH) _missingMdxReference(\"CH\", false);\n  if (!CH.Code) _missingMdxReference(\"CH.Code\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"o1js Basic Concepts\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Field elements are the basic unit of data in zero-knowledge proof programming. Each field element can store a number up to almost 256 bits in size. You can think of it as a uint256 in Solidity.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example, in typical programming, you might use:\"\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"sum \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"1 \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"+ \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"3.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In o1js, you write this as:\"\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"sum \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Field\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"1\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \").\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"add\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Field\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"3\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"))\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This can be simplified as:\"\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"sum \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Field\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"1\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \").\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"add\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"3\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \")\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note that the 3 is auto-promoted to a field type to make this cleaner.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Built-in data types\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some common data types you may use are:\"\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Bool\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(x);   \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"// accepts true or false\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#8B949E\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Field\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(x);  \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"// accepts an integer, or a numeric string if you want to represent a number greater than JavaScript can represent but within the max value that a field can store.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#8B949E\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"UInt64\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(x); \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"// accepts a Field - useful for constraining numbers to 64 bits\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#8B949E\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"UInt32\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(x); \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"// accepts a Field - useful for constraining numbers to 32 bits\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#8B949E\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In the case of \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"Field\"\n        })\n      }), \" and \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"Bool\"\n        })\n      }), \", you can also call the constructor without \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"new\"\n        })\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Tutorial\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a variable \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"sum\"\n        })\n      }), \" for a \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"Field\"\n        })\n      }), \" which adds 3 to the Field which has a value of 1:\"]\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"sum \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Field\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"1\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \").\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"add\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"3\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \");\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a variable \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"bool\"\n        })\n      }), \" for a Bool which accepts true or false\"]\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"bool \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"Bool\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"true\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \");\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a variable \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"int32\"\n        })\n      }), \" for a UInt32 which accepts a Field - useful for constraining numbers to 32 bits\"]\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"int32 \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"UInt32\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"123\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \");\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a variable \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"int64\"\n        })\n      }), \" for a UInt64 which accepts a Field - useful for constraining numbers to 64 bits\"]\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"const \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"int64 \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \"= new \",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#FF7B72\"\n                }\n              }\n            }, {\n              \"content\": \"UInt64\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"1234\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#79C0FF\"\n                }\n              }\n            }, {\n              \"content\": \");\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add log statements for the variables: \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"sum\"\n        })\n      }), \", \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"bool\"\n        })\n      }), \", \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"int32\"\n        })\n      }), \", \", _jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"int64\"\n        })\n      }), \" so you can see the underlying values:\"]\n    }), \"\\n\", _jsx(CH.Code, {\n      codeConfig: chCodeConfig,\n      northPanel: {\n        \"tabs\": [\"\"],\n        \"active\": \"\",\n        \"heightRatio\": 1\n      },\n      files: [{\n        \"name\": \"\",\n        \"focus\": \"\",\n        \"code\": {\n          \"lines\": [{\n            \"tokens\": [{\n              \"content\": \"Provable.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"log\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"\\\"sum has the value:\\\"\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#A5D6FF\"\n                }\n              }\n            }, {\n              \"content\": \", sum);\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"Provable.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"log\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"\\\"bool has the value:\\\"\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#A5D6FF\"\n                }\n              }\n            }, {\n              \"content\": \", bool);\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"Provable.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"log\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"\\\"int32 has the value:\\\"\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#A5D6FF\"\n                }\n              }\n            }, {\n              \"content\": \", int32);\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }, {\n            \"tokens\": [{\n              \"content\": \"Provable.\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"log\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#D2A8FF\"\n                }\n              }\n            }, {\n              \"content\": \"(\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }, {\n              \"content\": \"\\\"int64 has the value\\\"\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#A5D6FF\"\n                }\n              }\n            }, {\n              \"content\": \", int64);\",\n              \"props\": {\n                \"style\": {\n                  \"color\": \"#C9D1D9\"\n                }\n              }\n            }]\n          }],\n          \"lang\": \"ts\"\n        },\n        \"annotations\": []\n      }]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  chCodeConfig,\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"files":{"src":{"directory":{"main*ts":{"file":{"contents":"import { Field, Bool, UInt64, UInt32, Provable } from \"o1js\";\n"}},"main2*ts":{"file":{"contents":"import { Field, Bool, UInt64, UInt32, Provable } from \"o1js\";\n\nconsole.log(\"main2\");\n"}}}}},"filesArray":["src/main.ts","src/main2.ts"],"highlightedItem":{"highlightedName":"main*ts","highlightedCode":"import { Field, Bool, UInt64, UInt32, Provable } from \"o1js\";\n"},"focusedFiles":{"main*ts":{"file":{"contents":"import { Field, Bool, UInt64, UInt32, Provable } from \"o1js\";\n"}}},"command":"npm run build && node build/src/main.js","initTerminal":true}