import Head from "next/head";
import Header from "@/components/Header";
import { GetServerSideProps, NextPage } from "next";
import axios from "axios";
import { FileSystemTree } from "@webcontainer/api";
import { useAppDispatch } from "@/hooks/useAppDispatch";
import * as Diff from "diff";
import { useRouter } from "next/router";
import { normalizePath } from "@/utils/fileSystemWeb";

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const { commitId } = query;

  try {
    const response = await axios.get(
      `${process.env.NEXT_PUBLIC_API_URL}/versionControl/commit/${commitId}`
    );
    const { data } = response;
    return {
      props: { data },
    };
  } catch {
    return {
      props: { data: null },
    };
  }
};

const Home: NextPage<HomeProps> = ({ data }) => {
  return (
    <>
      <Head>
        <title>Mina Playground</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Header />
        <div className="p-2">
          <h1 className="text-xl text-gray-200 p-2">File changes:</h1>
          {Object.entries(data[0].files).map(
            ([key, { previousCode, currentCode, location }]) => {
              const diff = Diff.diffChars(previousCode, currentCode);
              return (
                <div className="collapse bg-gray-900 text-gray-200 my-1">
                  <input type="checkbox" />
                  <div className="collapse-title text-xl font-medium">
                    {normalizePath(key)}
                  </div>
                  <div className="collapse-content">
                    <pre className="whitespace-pre-wrap text-gray-200">
                      {diff.map((part) => {
                        const element = part.added ? (
                          <del className="text-green-600 no-underline bg-green-50">
                            {part.value}
                          </del>
                        ) : part.removed ? (
                          <ins className="text-red-600 no-underline bg-red-50">
                            {part.value}
                          </ins>
                        ) : (
                          part.value
                        );
                        return element;
                      })}
                    </pre>
                  </div>
                </div>
              );
            }
          )}
        </div>
      </div>
    </>
  );
};

interface HomeProps {
  fileSystemTree: FileSystemTree;
  _id: string;
  name: string;
  type: number;
  visibility: boolean;
  files_id: number;
}

export default Home;
