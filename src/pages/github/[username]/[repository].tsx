import Head from "next/head";
import Header from "@/components/Header";
import { NextPage } from "next";
import { useEffect, useState } from "react";
import { useAppDispatch } from "@/hooks/useAppDispatch";
import {
  initializeTerminal,
  installDependencies,
  selectInitializingEsbuild,
  selectTerminalInitialized,
  selectWebcontainerStarted,
  writeCommand,
} from "@/features/webcontainer/webcontainerSlice";
import { useAppSelector } from "@/hooks/useAppSelector";
import ProjectTerminal from "@/components/terminal/ProjectTerminal";
import { useRouter } from "next/router";

const GitHub: NextPage<HomeProps> = ({}) => {
  const { query } = useRouter();
  const { username, repository } = query;
  const dispatch = useAppDispatch();
  const [url, setUrl] = useState("");
  const webcontainerStarted = useAppSelector(selectWebcontainerStarted);
  const terminalInitialized = useAppSelector(selectTerminalInitialized);
  const initializingWebcontainer = useAppSelector(selectInitializingEsbuild);

  useEffect(() => {
    if (!webcontainerStarted) {
      dispatch(
        installDependencies({ fileSystemTree: {}, hasPackageJSON: false })
      );
      return;
    }
  }, [webcontainerStarted]);

  useEffect(() => {
    if (initializingWebcontainer) return;
    dispatch(initializeTerminal({}));
  }, [initializingWebcontainer]);

  useEffect(() => {
    if (!terminalInitialized) return;
    dispatch(
      writeCommand(
        `git clone https://github.com/${username}/${repository}.git \r`
      )
    );
  }, [terminalInitialized]);

  const cloneRepository = () => {
    dispatch(writeCommand(`git clone ${url} \r`));
  };

  return (
    <>
      <Head>
        <title>Mina Playground</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <input value={url} onChange={(event) => setUrl(event.target.value)} />
        <button onClick={cloneRepository}>Clone</button>
        <ProjectTerminal />
      </main>
    </>
  );
};

interface HomeProps {}

export default GitHub;
